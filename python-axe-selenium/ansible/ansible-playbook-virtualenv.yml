---
- hosts: all
  tasks:
    - name: Create accessibility testing directory
      file:
        path: "~/accessibility-testing"
        state: "directory"

      # python_version is a given variable
    - name: Check if Python3 is installed
      command: python3 --version
      register: python_version_result
      ignore_errors: true

    #  - name: Python version
    #    debug:
    #    msg: "{{ python_version_result}}"

    - name: Install/Update Python
      apt: name="python{{ '3.7.3' }}-dev" staansbite=present
      when: python_version_result.stdout | replace('Python ', '') is version('3.7', '<')
      ignore_errors: true

    - name: Install virtualenv package
      pip:
        name: virtualenv
        executable: pip3

      # sudo: yes
    - name: Check if virtualenv ~/accessibility-testing/venv folder exists (1/2)
      file:
        path: "~/accessibility-testing/venv"
        state: "touch"
      ignore_errors: yes

    - name: Check if virtualenv ~/accessibility-testing/venv folder exists (2/2)
      file:
        path: "~/accessibility-testing/venv"
        state: "absent"

    - name: Create Virtual Environment
      shell: bash -lc "virtualenv ~/accessibility-testing/venv && source ~/accessibility-testing/venv/bin/activate"


    # - name: Activate virtual environment (venv)
    #   shell: . venv/bin/activate

#    - name: Install requirements for Python using requirements.txt
#      pip:
#        requirements: "https://raw.githubusercontent.com/dalsontws/accessibility-axe-selenium/master/python-axe-selenium/requirements.txt?token=AKPNLJTM7I74K7MP3KFO7P26C2GKU"
#        virtualenv: ~/accessibility-testing/venv

    - name: Brew install nvm
      homebrew: name=['nvm'] state=present

    - name: Brew link nvm
      homebrew: name=['nvm'] state=linked

    - name: Create ~/.nvm directory
      file: path="~/.nvm" state="directory"

    - name: Add ~/.bash_profile if not present
      file: path=~/.bash_profile state=touch

    - name: Add to .bash_profile nvm.sh
      lineinfile: dest="~/.bash_profile" line='{{item}}' state=present
      with_items:
        - 'export NVM_DIR="$HOME/.nvm"'
        - 'source $(brew --prefix nvm)/nvm.sh'

    - name: "Install and Use Node.js {{ node_js_version }}"
      shell: >
        source $(brew --prefix nvm)/nvm.sh;
        nvm install v13.5.0;

    - name: