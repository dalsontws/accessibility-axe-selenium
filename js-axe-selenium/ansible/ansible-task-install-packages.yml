---
- hosts: all
  tasks:
    - name: Get nvm.sh
      get_url:
        url: https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh
        dest: "{{ playbook_dir }}"
        mode: '0755'

    - name: Create $PWD/.nvm directory
      file: path="{{ playbook_dir }}/.nvm" state="directory"

    - name: Install nvm
      shell: >
        export NVM_DIR="{{ playbook_dir }}/.nvm";
        {{ playbook_dir }}/install.sh;

    - name: "Install and Use Node.js {{ node_js_version }}"
      shell: >
        export NVM_DIR="{{ playbook_dir }}/.nvm";
        source $NVM_DIR/nvm.sh;
        nvm install v13.5.0;
        nvm use --delete-prefix v13.5.0/dev/null --silent;
        which npm;
      register: npm_output

    - name: Save location of npm
      set_fact: npm_location={{ npm_output.stdout_lines | last }}

    - name: bug
      debug:
        msg: "{{ npm_location }}:{{ ansible_env.PATH }}"

    - name: Save location of npm
      set_fact: bin_location={{ npm_location | dirname }}


    - name: Install packages based on package.json using the npm installed with nvm v0.35.2.
      environment:
        PATH: "{{ bin_location }}:{{ ansible_env.PATH }}"
      npm:
        path: "{{ playbook_dir | dirname }}"

    - name: Get Chrome Major version
      shell:
           export CHROME_VERSION=$(defaults read "$(ls -t /Applications/*Google*Chrome*.app/Contents/Info.plist | head -1)" CFBundleShortVersionString);
           echo ${CHROME_VERSION%%.*};
        export CHROME_VERSION=$(defaults read "$(ls -t /Applications/*Google*Chrome*.app/Contents/Info.plist | head -1)" CFBundleShortVersionString);
        echo ${CHROME_VERSION%%.*};
      register: chrome_version_command_output

    - name: Save Chrome major version
      set_fact: chrome_version={{ chrome_version_command_output.stdout }}

    - name: Chrome Version Detected
      debug:
        msg: "{{ chrome_version }}"

    - name: Get Chromedriver version from website
      shell:
           curl https://chromedriver.storage.googleapis.com/LATEST_RELEASE_{{ chrome_version }};

      shell: curl https://chromedriver.storage.googleapis.com/LATEST_RELEASE_{{ chrome_version }};
      register: chromedriver_version_command_output

    - name: Save Chromedriver version from website
      set_fact: chromedriver_version={{ chromedriver_version_command_output.stdout }}

    - name: Chromedriver available from website
      debug:
        msg: "{{ chromedriver_version }}"

    - name: Download Chromedriver
      get_url:
         url: "https://chromedriver.storage.googleapis.com/{{ chromedriver_version }}/chromedriver_mac64.zip"
         dest: "{{ playbook_dir | dirname }}"
         force: yes

    - name: Unzip Chromedriver
      unarchive:
         src: "{{ playbook_dir | dirname }}/chromedriver_mac64.zip"
         dest: "{{ playbook_dir | dirname }}"
        url: "https://chromedriver.storage.googleapis.com/{{ chromedriver_version }}/chromedriver_mac64.zip"
        dest: "{{ playbook_dir | dirname }}"
        force: yes

    - name: Unzip Chromedriver
      unarchive:
        src: "{{ playbook_dir | dirname }}/chromedriver_mac64.zip"
        dest: "{{ playbook_dir | dirname }}"

    - name: Delete Chromedriver.zip
      file:
        path: "{{ playbook_dir | dirname }}/chromedriver_mac64.zip"
        state: absent

